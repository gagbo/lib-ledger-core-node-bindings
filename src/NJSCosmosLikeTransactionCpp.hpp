// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#ifndef DJINNI_GENERATED_NJSCOSMOSLIKETRANSACTION_HPP
#define DJINNI_GENERATED_NJSCOSMOSLIKETRANSACTION_HPP


#include "NJSAmountCpp.hpp"
#include "NJSCosmosLikeMessageCpp.hpp"
#include <chrono>
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../include/CosmosLikeTransaction.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSCosmosLikeTransaction final {
public:

    static void Initialize(Local<Object> target);
    NJSCosmosLikeTransaction() = delete;

    static Local<Object> wrap(const std::shared_ptr<ledger::core::api::CosmosLikeTransaction> &object);
    static Nan::Persistent<ObjectTemplate> CosmosLikeTransaction_prototype;

private:
    /** Get the hash of the transaction. */
    static NAN_METHOD(getHash);

    /** Get Fee (in drop) */
    static NAN_METHOD(getFee);

    /** Serialize the transaction to its JSON format. */
    static NAN_METHOD(serialize);

    /** Get the list of messages */
    static NAN_METHOD(getMessages);

    /** Get memo */
    static NAN_METHOD(getMemo);

    /** Set signature of transaction, when a signature is set serialize method gives back serialized Tx */
    static NAN_METHOD(setSignature);

    static NAN_METHOD(setDERSignature);

    /**
     * Get the time when the transaction was issued or the time of the block including
     * this transaction
     */
    static NAN_METHOD(getDate);

    /** Get Signing public Key */
    static NAN_METHOD(getSigningPubKey);

    static NAN_METHOD(getGas);

    static NAN_METHOD(New);

    static NAN_METHOD(isNull);
};
#endif //DJINNI_GENERATED_NJSCOSMOSLIKETRANSACTION_HPP
